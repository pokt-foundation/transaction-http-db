// Code generated by mockery v1.0.0. DO NOT EDIT.

package router

import (
	context "context"

	types "github.com/pokt-foundation/transaction-db/types"
	mock "github.com/stretchr/testify/mock"
)

// mockDriver is an autogenerated mock type for the driver type
type mockDriver struct {
	mock.Mock
}

// ReadRelay provides a mock function with given fields: ctx, relayID
func (_m *mockDriver) ReadRelay(ctx context.Context, relayID int) (types.Relay, error) {
	ret := _m.Called(ctx, relayID)

	var r0 types.Relay
	if rf, ok := ret.Get(0).(func(context.Context, int) types.Relay); ok {
		r0 = rf(ctx, relayID)
	} else {
		r0 = ret.Get(0).(types.Relay)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int) error); ok {
		r1 = rf(ctx, relayID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// WriteRegion provides a mock function with given fields: ctx, region
func (_m *mockDriver) WriteRegion(ctx context.Context, region types.PortalRegion) error {
	ret := _m.Called(ctx, region)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.PortalRegion) error); ok {
		r0 = rf(ctx, region)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteRelay provides a mock function with given fields: ctx, relay
func (_m *mockDriver) WriteRelay(ctx context.Context, relay types.Relay) error {
	ret := _m.Called(ctx, relay)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.Relay) error); ok {
		r0 = rf(ctx, relay)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WriteSession provides a mock function with given fields: ctx, session
func (_m *mockDriver) WriteSession(ctx context.Context, session types.PocketSession) error {
	ret := _m.Called(ctx, session)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, types.PocketSession) error); ok {
		r0 = rf(ctx, session)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
